Python Code Structure
=====================

There are 4 main files for the CSS2012 calculations:

1. ``css2012.py``. This is the main file that drives computation computation. It it has a number of "sections" set of by ``##-----``:

* ``Run Control parameters``: This section allows the user to change the following parameters:
    * ``NF``: how many times to run the entire simulation
    * ``NG``: how long each simulation will be
    * ``output_dir``: The folder where generated data should be saved
    * ``file_name``: The base file name that will be used as a template when saving all files
    * ``skip``: How many iterations of the Gibbs sampler to do before printing a status message
* ``Load Data``: Loads the data, cleans it, and prepares constants used in simulation. At the end of the section it will write the cleaned data to a csv file (``all_data.csv``). On subsequent executions, the program will search for this file and import it skipping the data cleaning code, otherwise it will prepare this file for future execution.
* ``Set VAR properties and priors``
* ``Initialize gibbs, volatility, and measurement arrays``
* ``Define main mcmc function``: This section defines a single function ``mcmc_loop``. This function implements the Gibbs sampler. It is defined as a function so that in can be imported into other files and used there. This is done in the parallel implementation.
* ``Do MCMC calculations in series``

To run this file simply call ``python css2012.py`` from the command line or ``run css2012`` from the IPython prompt

2. ``css2012Funcs.py``. This file defines 3 groups of functions: 1) simulation functions, 2) MCMC functions, 3) MPI helper functions. The first two sets of functions are imported into ``css2012.py`` and are essential to running the simulation. the MPI helper functions are only used in the parallel version of the code.
3. ``cssFigs``: This file generates figures 2-4 from the CSS2012 paper using the data generated by Python.
4. ``css2012ParFile.py``: This file uses the definitions from ``css2012.py`` and ``css2012Funcs.py`` to implement a parallel version of the MCMC code. It parallelizes on the file, so each process will be doing an entire Gibbs sampling routine at the same time. It uses MPI for this. To run the file in parallel, enter the following at the command prompt ``mpiexec -n NP python css2012ParFile.py``, where ``NP`` is the number of processes you would like to use.

Other files in this directory are simply helper files not directly related to the computation.


